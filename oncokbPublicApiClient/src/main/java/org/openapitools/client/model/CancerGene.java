/*
 * OncoKB APIs
 * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.
 *
 * The version of the OpenAPI document: v1.5.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CancerGene
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-27T16:00:42.192711-05:00[America/New_York]", comments = "Generator version: 7.11.0")
public class CancerGene {
  public static final String SERIALIZED_NAME_ENTREZ_GENE_ID = "entrezGeneId";
  @SerializedName(SERIALIZED_NAME_ENTREZ_GENE_ID)
  @javax.annotation.Nullable
  private Integer entrezGeneId;

  public static final String SERIALIZED_NAME_FOUNDATION = "foundation";
  @SerializedName(SERIALIZED_NAME_FOUNDATION)
  @javax.annotation.Nullable
  private Boolean foundation;

  public static final String SERIALIZED_NAME_FOUNDATION_HEME = "foundationHeme";
  @SerializedName(SERIALIZED_NAME_FOUNDATION_HEME)
  @javax.annotation.Nullable
  private Boolean foundationHeme;

  public static final String SERIALIZED_NAME_GENE_ALIASES = "geneAliases";
  @SerializedName(SERIALIZED_NAME_GENE_ALIASES)
  @javax.annotation.Nullable
  private List<String> geneAliases = new ArrayList<>();

  public static final String SERIALIZED_NAME_GRCH37_ISOFORM = "grch37Isoform";
  @SerializedName(SERIALIZED_NAME_GRCH37_ISOFORM)
  @javax.annotation.Nullable
  private String grch37Isoform;

  public static final String SERIALIZED_NAME_GRCH37_REF_SEQ = "grch37RefSeq";
  @SerializedName(SERIALIZED_NAME_GRCH37_REF_SEQ)
  @javax.annotation.Nullable
  private String grch37RefSeq;

  public static final String SERIALIZED_NAME_GRCH38_ISOFORM = "grch38Isoform";
  @SerializedName(SERIALIZED_NAME_GRCH38_ISOFORM)
  @javax.annotation.Nullable
  private String grch38Isoform;

  public static final String SERIALIZED_NAME_GRCH38_REF_SEQ = "grch38RefSeq";
  @SerializedName(SERIALIZED_NAME_GRCH38_REF_SEQ)
  @javax.annotation.Nullable
  private String grch38RefSeq;

  public static final String SERIALIZED_NAME_HUGO_SYMBOL = "hugoSymbol";
  @SerializedName(SERIALIZED_NAME_HUGO_SYMBOL)
  @javax.annotation.Nullable
  private String hugoSymbol;

  public static final String SERIALIZED_NAME_M_S_K_HEME = "mSKHeme";
  @SerializedName(SERIALIZED_NAME_M_S_K_HEME)
  @javax.annotation.Nullable
  private Boolean mSKHeme;

  public static final String SERIALIZED_NAME_M_S_K_IMPACT = "mSKImpact";
  @SerializedName(SERIALIZED_NAME_M_S_K_IMPACT)
  @javax.annotation.Nullable
  private Boolean mSKImpact;

  public static final String SERIALIZED_NAME_OCCURRENCE_COUNT = "occurrenceCount";
  @SerializedName(SERIALIZED_NAME_OCCURRENCE_COUNT)
  @javax.annotation.Nullable
  private Integer occurrenceCount;

  public static final String SERIALIZED_NAME_ONCOGENE = "oncogene";
  @SerializedName(SERIALIZED_NAME_ONCOGENE)
  @javax.annotation.Nullable
  private Boolean oncogene;

  public static final String SERIALIZED_NAME_ONCOKB_ANNOTATED = "oncokbAnnotated";
  @SerializedName(SERIALIZED_NAME_ONCOKB_ANNOTATED)
  @javax.annotation.Nullable
  private Boolean oncokbAnnotated;

  public static final String SERIALIZED_NAME_SANGER_C_G_C = "sangerCGC";
  @SerializedName(SERIALIZED_NAME_SANGER_C_G_C)
  @javax.annotation.Nullable
  private Boolean sangerCGC;

  public static final String SERIALIZED_NAME_TSG = "tsg";
  @SerializedName(SERIALIZED_NAME_TSG)
  @javax.annotation.Nullable
  private Boolean tsg;

  public static final String SERIALIZED_NAME_VOGELSTEIN = "vogelstein";
  @SerializedName(SERIALIZED_NAME_VOGELSTEIN)
  @javax.annotation.Nullable
  private Boolean vogelstein;

  public CancerGene() {
  }

  public CancerGene entrezGeneId(@javax.annotation.Nullable Integer entrezGeneId) {
    this.entrezGeneId = entrezGeneId;
    return this;
  }

  /**
   * Get entrezGeneId
   * @return entrezGeneId
   */
  @javax.annotation.Nullable
  public Integer getEntrezGeneId() {
    return entrezGeneId;
  }

  public void setEntrezGeneId(@javax.annotation.Nullable Integer entrezGeneId) {
    this.entrezGeneId = entrezGeneId;
  }


  public CancerGene foundation(@javax.annotation.Nullable Boolean foundation) {
    this.foundation = foundation;
    return this;
  }

  /**
   * Get foundation
   * @return foundation
   */
  @javax.annotation.Nullable
  public Boolean getFoundation() {
    return foundation;
  }

  public void setFoundation(@javax.annotation.Nullable Boolean foundation) {
    this.foundation = foundation;
  }


  public CancerGene foundationHeme(@javax.annotation.Nullable Boolean foundationHeme) {
    this.foundationHeme = foundationHeme;
    return this;
  }

  /**
   * Get foundationHeme
   * @return foundationHeme
   */
  @javax.annotation.Nullable
  public Boolean getFoundationHeme() {
    return foundationHeme;
  }

  public void setFoundationHeme(@javax.annotation.Nullable Boolean foundationHeme) {
    this.foundationHeme = foundationHeme;
  }


  public CancerGene geneAliases(@javax.annotation.Nullable List<String> geneAliases) {
    this.geneAliases = geneAliases;
    return this;
  }

  public CancerGene addGeneAliasesItem(String geneAliasesItem) {
    if (this.geneAliases == null) {
      this.geneAliases = new ArrayList<>();
    }
    this.geneAliases.add(geneAliasesItem);
    return this;
  }

  /**
   * Get geneAliases
   * @return geneAliases
   */
  @javax.annotation.Nullable
  public List<String> getGeneAliases() {
    return geneAliases;
  }

  public void setGeneAliases(@javax.annotation.Nullable List<String> geneAliases) {
    this.geneAliases = geneAliases;
  }


  public CancerGene grch37Isoform(@javax.annotation.Nullable String grch37Isoform) {
    this.grch37Isoform = grch37Isoform;
    return this;
  }

  /**
   * Get grch37Isoform
   * @return grch37Isoform
   */
  @javax.annotation.Nullable
  public String getGrch37Isoform() {
    return grch37Isoform;
  }

  public void setGrch37Isoform(@javax.annotation.Nullable String grch37Isoform) {
    this.grch37Isoform = grch37Isoform;
  }


  public CancerGene grch37RefSeq(@javax.annotation.Nullable String grch37RefSeq) {
    this.grch37RefSeq = grch37RefSeq;
    return this;
  }

  /**
   * Get grch37RefSeq
   * @return grch37RefSeq
   */
  @javax.annotation.Nullable
  public String getGrch37RefSeq() {
    return grch37RefSeq;
  }

  public void setGrch37RefSeq(@javax.annotation.Nullable String grch37RefSeq) {
    this.grch37RefSeq = grch37RefSeq;
  }


  public CancerGene grch38Isoform(@javax.annotation.Nullable String grch38Isoform) {
    this.grch38Isoform = grch38Isoform;
    return this;
  }

  /**
   * Get grch38Isoform
   * @return grch38Isoform
   */
  @javax.annotation.Nullable
  public String getGrch38Isoform() {
    return grch38Isoform;
  }

  public void setGrch38Isoform(@javax.annotation.Nullable String grch38Isoform) {
    this.grch38Isoform = grch38Isoform;
  }


  public CancerGene grch38RefSeq(@javax.annotation.Nullable String grch38RefSeq) {
    this.grch38RefSeq = grch38RefSeq;
    return this;
  }

  /**
   * Get grch38RefSeq
   * @return grch38RefSeq
   */
  @javax.annotation.Nullable
  public String getGrch38RefSeq() {
    return grch38RefSeq;
  }

  public void setGrch38RefSeq(@javax.annotation.Nullable String grch38RefSeq) {
    this.grch38RefSeq = grch38RefSeq;
  }


  public CancerGene hugoSymbol(@javax.annotation.Nullable String hugoSymbol) {
    this.hugoSymbol = hugoSymbol;
    return this;
  }

  /**
   * Get hugoSymbol
   * @return hugoSymbol
   */
  @javax.annotation.Nullable
  public String getHugoSymbol() {
    return hugoSymbol;
  }

  public void setHugoSymbol(@javax.annotation.Nullable String hugoSymbol) {
    this.hugoSymbol = hugoSymbol;
  }


  public CancerGene mSKHeme(@javax.annotation.Nullable Boolean mSKHeme) {
    this.mSKHeme = mSKHeme;
    return this;
  }

  /**
   * Get mSKHeme
   * @return mSKHeme
   */
  @javax.annotation.Nullable
  public Boolean getmSKHeme() {
    return mSKHeme;
  }

  public void setmSKHeme(@javax.annotation.Nullable Boolean mSKHeme) {
    this.mSKHeme = mSKHeme;
  }


  public CancerGene mSKImpact(@javax.annotation.Nullable Boolean mSKImpact) {
    this.mSKImpact = mSKImpact;
    return this;
  }

  /**
   * Get mSKImpact
   * @return mSKImpact
   */
  @javax.annotation.Nullable
  public Boolean getmSKImpact() {
    return mSKImpact;
  }

  public void setmSKImpact(@javax.annotation.Nullable Boolean mSKImpact) {
    this.mSKImpact = mSKImpact;
  }


  public CancerGene occurrenceCount(@javax.annotation.Nullable Integer occurrenceCount) {
    this.occurrenceCount = occurrenceCount;
    return this;
  }

  /**
   * Get occurrenceCount
   * @return occurrenceCount
   */
  @javax.annotation.Nullable
  public Integer getOccurrenceCount() {
    return occurrenceCount;
  }

  public void setOccurrenceCount(@javax.annotation.Nullable Integer occurrenceCount) {
    this.occurrenceCount = occurrenceCount;
  }


  public CancerGene oncogene(@javax.annotation.Nullable Boolean oncogene) {
    this.oncogene = oncogene;
    return this;
  }

  /**
   * Get oncogene
   * @return oncogene
   */
  @javax.annotation.Nullable
  public Boolean getOncogene() {
    return oncogene;
  }

  public void setOncogene(@javax.annotation.Nullable Boolean oncogene) {
    this.oncogene = oncogene;
  }


  public CancerGene oncokbAnnotated(@javax.annotation.Nullable Boolean oncokbAnnotated) {
    this.oncokbAnnotated = oncokbAnnotated;
    return this;
  }

  /**
   * Get oncokbAnnotated
   * @return oncokbAnnotated
   */
  @javax.annotation.Nullable
  public Boolean getOncokbAnnotated() {
    return oncokbAnnotated;
  }

  public void setOncokbAnnotated(@javax.annotation.Nullable Boolean oncokbAnnotated) {
    this.oncokbAnnotated = oncokbAnnotated;
  }


  public CancerGene sangerCGC(@javax.annotation.Nullable Boolean sangerCGC) {
    this.sangerCGC = sangerCGC;
    return this;
  }

  /**
   * Get sangerCGC
   * @return sangerCGC
   */
  @javax.annotation.Nullable
  public Boolean getSangerCGC() {
    return sangerCGC;
  }

  public void setSangerCGC(@javax.annotation.Nullable Boolean sangerCGC) {
    this.sangerCGC = sangerCGC;
  }


  public CancerGene tsg(@javax.annotation.Nullable Boolean tsg) {
    this.tsg = tsg;
    return this;
  }

  /**
   * Get tsg
   * @return tsg
   */
  @javax.annotation.Nullable
  public Boolean getTsg() {
    return tsg;
  }

  public void setTsg(@javax.annotation.Nullable Boolean tsg) {
    this.tsg = tsg;
  }


  public CancerGene vogelstein(@javax.annotation.Nullable Boolean vogelstein) {
    this.vogelstein = vogelstein;
    return this;
  }

  /**
   * Get vogelstein
   * @return vogelstein
   */
  @javax.annotation.Nullable
  public Boolean getVogelstein() {
    return vogelstein;
  }

  public void setVogelstein(@javax.annotation.Nullable Boolean vogelstein) {
    this.vogelstein = vogelstein;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CancerGene cancerGene = (CancerGene) o;
    return Objects.equals(this.entrezGeneId, cancerGene.entrezGeneId) &&
        Objects.equals(this.foundation, cancerGene.foundation) &&
        Objects.equals(this.foundationHeme, cancerGene.foundationHeme) &&
        Objects.equals(this.geneAliases, cancerGene.geneAliases) &&
        Objects.equals(this.grch37Isoform, cancerGene.grch37Isoform) &&
        Objects.equals(this.grch37RefSeq, cancerGene.grch37RefSeq) &&
        Objects.equals(this.grch38Isoform, cancerGene.grch38Isoform) &&
        Objects.equals(this.grch38RefSeq, cancerGene.grch38RefSeq) &&
        Objects.equals(this.hugoSymbol, cancerGene.hugoSymbol) &&
        Objects.equals(this.mSKHeme, cancerGene.mSKHeme) &&
        Objects.equals(this.mSKImpact, cancerGene.mSKImpact) &&
        Objects.equals(this.occurrenceCount, cancerGene.occurrenceCount) &&
        Objects.equals(this.oncogene, cancerGene.oncogene) &&
        Objects.equals(this.oncokbAnnotated, cancerGene.oncokbAnnotated) &&
        Objects.equals(this.sangerCGC, cancerGene.sangerCGC) &&
        Objects.equals(this.tsg, cancerGene.tsg) &&
        Objects.equals(this.vogelstein, cancerGene.vogelstein);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entrezGeneId, foundation, foundationHeme, geneAliases, grch37Isoform, grch37RefSeq, grch38Isoform, grch38RefSeq, hugoSymbol, mSKHeme, mSKImpact, occurrenceCount, oncogene, oncokbAnnotated, sangerCGC, tsg, vogelstein);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CancerGene {\n");
    sb.append("    entrezGeneId: ").append(toIndentedString(entrezGeneId)).append("\n");
    sb.append("    foundation: ").append(toIndentedString(foundation)).append("\n");
    sb.append("    foundationHeme: ").append(toIndentedString(foundationHeme)).append("\n");
    sb.append("    geneAliases: ").append(toIndentedString(geneAliases)).append("\n");
    sb.append("    grch37Isoform: ").append(toIndentedString(grch37Isoform)).append("\n");
    sb.append("    grch37RefSeq: ").append(toIndentedString(grch37RefSeq)).append("\n");
    sb.append("    grch38Isoform: ").append(toIndentedString(grch38Isoform)).append("\n");
    sb.append("    grch38RefSeq: ").append(toIndentedString(grch38RefSeq)).append("\n");
    sb.append("    hugoSymbol: ").append(toIndentedString(hugoSymbol)).append("\n");
    sb.append("    mSKHeme: ").append(toIndentedString(mSKHeme)).append("\n");
    sb.append("    mSKImpact: ").append(toIndentedString(mSKImpact)).append("\n");
    sb.append("    occurrenceCount: ").append(toIndentedString(occurrenceCount)).append("\n");
    sb.append("    oncogene: ").append(toIndentedString(oncogene)).append("\n");
    sb.append("    oncokbAnnotated: ").append(toIndentedString(oncokbAnnotated)).append("\n");
    sb.append("    sangerCGC: ").append(toIndentedString(sangerCGC)).append("\n");
    sb.append("    tsg: ").append(toIndentedString(tsg)).append("\n");
    sb.append("    vogelstein: ").append(toIndentedString(vogelstein)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entrezGeneId");
    openapiFields.add("foundation");
    openapiFields.add("foundationHeme");
    openapiFields.add("geneAliases");
    openapiFields.add("grch37Isoform");
    openapiFields.add("grch37RefSeq");
    openapiFields.add("grch38Isoform");
    openapiFields.add("grch38RefSeq");
    openapiFields.add("hugoSymbol");
    openapiFields.add("mSKHeme");
    openapiFields.add("mSKImpact");
    openapiFields.add("occurrenceCount");
    openapiFields.add("oncogene");
    openapiFields.add("oncokbAnnotated");
    openapiFields.add("sangerCGC");
    openapiFields.add("tsg");
    openapiFields.add("vogelstein");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CancerGene
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CancerGene.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CancerGene is not found in the empty JSON string", CancerGene.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CancerGene.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CancerGene` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("geneAliases") != null && !jsonObj.get("geneAliases").isJsonNull() && !jsonObj.get("geneAliases").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geneAliases` to be an array in the JSON string but got `%s`", jsonObj.get("geneAliases").toString()));
      }
      if ((jsonObj.get("grch37Isoform") != null && !jsonObj.get("grch37Isoform").isJsonNull()) && !jsonObj.get("grch37Isoform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grch37Isoform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grch37Isoform").toString()));
      }
      if ((jsonObj.get("grch37RefSeq") != null && !jsonObj.get("grch37RefSeq").isJsonNull()) && !jsonObj.get("grch37RefSeq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grch37RefSeq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grch37RefSeq").toString()));
      }
      if ((jsonObj.get("grch38Isoform") != null && !jsonObj.get("grch38Isoform").isJsonNull()) && !jsonObj.get("grch38Isoform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grch38Isoform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grch38Isoform").toString()));
      }
      if ((jsonObj.get("grch38RefSeq") != null && !jsonObj.get("grch38RefSeq").isJsonNull()) && !jsonObj.get("grch38RefSeq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grch38RefSeq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grch38RefSeq").toString()));
      }
      if ((jsonObj.get("hugoSymbol") != null && !jsonObj.get("hugoSymbol").isJsonNull()) && !jsonObj.get("hugoSymbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hugoSymbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hugoSymbol").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CancerGene.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CancerGene' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CancerGene> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CancerGene.class));

       return (TypeAdapter<T>) new TypeAdapter<CancerGene>() {
           @Override
           public void write(JsonWriter out, CancerGene value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CancerGene read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CancerGene given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CancerGene
   * @throws IOException if the JSON string is invalid with respect to CancerGene
   */
  public static CancerGene fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CancerGene.class);
  }

  /**
   * Convert an instance of CancerGene to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

