/*
 * OncoKB Private APIs
 * These endpoints are for private use only.
 *
 * The version of the OpenAPI document: v1.2.2
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.oncokb.client.InfoLevel;
import org.oncokb.client.Version;

/**
 * OncoKBInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OncoKBInfo {
  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_DATA_VERSION = "dataVersion";
  @SerializedName(SERIALIZED_NAME_DATA_VERSION)
  private Version dataVersion;

  public static final String SERIALIZED_NAME_LEVELS = "levels";
  @SerializedName(SERIALIZED_NAME_LEVELS)
  private List<InfoLevel> levels = null;

  public static final String SERIALIZED_NAME_NCIT_VERSION = "ncitVersion";
  @SerializedName(SERIALIZED_NAME_NCIT_VERSION)
  private String ncitVersion;

  public static final String SERIALIZED_NAME_ONCO_TREE_VERSION = "oncoTreeVersion";
  @SerializedName(SERIALIZED_NAME_ONCO_TREE_VERSION)
  private String oncoTreeVersion;

  public static final String SERIALIZED_NAME_PUBLIC_INSTANCE = "publicInstance";
  @SerializedName(SERIALIZED_NAME_PUBLIC_INSTANCE)
  private Boolean publicInstance;

  public OncoKBInfo() { 
  }

  public OncoKBInfo apiVersion(String apiVersion) {
    
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * Get apiVersion
   * @return apiVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApiVersion() {
    return apiVersion;
  }


  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public OncoKBInfo dataVersion(Version dataVersion) {
    
    this.dataVersion = dataVersion;
    return this;
  }

   /**
   * Get dataVersion
   * @return dataVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Version getDataVersion() {
    return dataVersion;
  }


  public void setDataVersion(Version dataVersion) {
    this.dataVersion = dataVersion;
  }


  public OncoKBInfo levels(List<InfoLevel> levels) {
    
    this.levels = levels;
    return this;
  }

  public OncoKBInfo addLevelsItem(InfoLevel levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<InfoLevel>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InfoLevel> getLevels() {
    return levels;
  }


  public void setLevels(List<InfoLevel> levels) {
    this.levels = levels;
  }


  public OncoKBInfo ncitVersion(String ncitVersion) {
    
    this.ncitVersion = ncitVersion;
    return this;
  }

   /**
   * Get ncitVersion
   * @return ncitVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNcitVersion() {
    return ncitVersion;
  }


  public void setNcitVersion(String ncitVersion) {
    this.ncitVersion = ncitVersion;
  }


  public OncoKBInfo oncoTreeVersion(String oncoTreeVersion) {
    
    this.oncoTreeVersion = oncoTreeVersion;
    return this;
  }

   /**
   * Get oncoTreeVersion
   * @return oncoTreeVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOncoTreeVersion() {
    return oncoTreeVersion;
  }


  public void setOncoTreeVersion(String oncoTreeVersion) {
    this.oncoTreeVersion = oncoTreeVersion;
  }


  public OncoKBInfo publicInstance(Boolean publicInstance) {
    
    this.publicInstance = publicInstance;
    return this;
  }

   /**
   * Get publicInstance
   * @return publicInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPublicInstance() {
    return publicInstance;
  }


  public void setPublicInstance(Boolean publicInstance) {
    this.publicInstance = publicInstance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OncoKBInfo oncoKBInfo = (OncoKBInfo) o;
    return Objects.equals(this.apiVersion, oncoKBInfo.apiVersion) &&
        Objects.equals(this.dataVersion, oncoKBInfo.dataVersion) &&
        Objects.equals(this.levels, oncoKBInfo.levels) &&
        Objects.equals(this.ncitVersion, oncoKBInfo.ncitVersion) &&
        Objects.equals(this.oncoTreeVersion, oncoKBInfo.oncoTreeVersion) &&
        Objects.equals(this.publicInstance, oncoKBInfo.publicInstance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, dataVersion, levels, ncitVersion, oncoTreeVersion, publicInstance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OncoKBInfo {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    dataVersion: ").append(toIndentedString(dataVersion)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    ncitVersion: ").append(toIndentedString(ncitVersion)).append("\n");
    sb.append("    oncoTreeVersion: ").append(toIndentedString(oncoTreeVersion)).append("\n");
    sb.append("    publicInstance: ").append(toIndentedString(publicInstance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

