/*
 * oncokb-transcript API
 * oncokb-transcript API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_transcript.client;

import org.oncokb.oncokb_transcript.ApiException;
import org.oncokb.oncokb_transcript.client.AddTranscriptBody;
import org.oncokb.oncokb_transcript.client.AllReferenceTranscriptSuggestionVM;
import org.oncokb.oncokb_transcript.client.MatchTranscriptVM;
import org.oncokb.oncokb_transcript.client.TranscriptComparisonResultVM;
import org.oncokb.oncokb_transcript.client.TranscriptComparisonVM;
import org.oncokb.oncokb_transcript.client.TranscriptDTO;
import org.oncokb.oncokb_transcript.client.TranscriptMatchResultVM;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TranscriptControllerApi
 */
@Ignore
public class TranscriptControllerApiTest {

    private final TranscriptControllerApi api = new TranscriptControllerApi();

    
    /**
     * addTranscript
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addTranscriptUsingPOSTTest() throws ApiException {
        AddTranscriptBody addTranscriptBody = null;
                TranscriptDTO response = api.addTranscriptUsingPOST(addTranscriptBody);
        // TODO: test validations
    }
    
    /**
     * compareTranscript
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void compareTranscriptUsingPOSTTest() throws ApiException {
        String hugoSymbol = null;
        TranscriptComparisonVM transcriptComparisonVM = null;
                TranscriptComparisonResultVM response = api.compareTranscriptUsingPOST(hugoSymbol, transcriptComparisonVM);
        // TODO: test validations
    }
    
    /**
     * findTranscriptsByEnsemblIds
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findTranscriptsByEnsemblIdsUsingPOSTTest() throws ApiException {
        String referenceGenome = null;
        List<String> requestBody = null;
                List<TranscriptDTO> response = api.findTranscriptsByEnsemblIdsUsingPOST(referenceGenome, requestBody);
        // TODO: test validations
    }
    
    /**
     * matchTranscript
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void matchTranscriptUsingPOSTTest() throws ApiException {
        String hugoSymbol = null;
        MatchTranscriptVM matchTranscriptVM = null;
                TranscriptMatchResultVM response = api.matchTranscriptUsingPOST(hugoSymbol, matchTranscriptVM);
        // TODO: test validations
    }
    
    /**
     * suggestVariant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void suggestVariantUsingGETTest() throws ApiException {
        String hugoSymbol = null;
        Integer proteinPosition = null;
        String curatedResidue = null;
        String grch37Transcript = null;
        String grch38Transcript = null;
                AllReferenceTranscriptSuggestionVM response = api.suggestVariantUsingGET(hugoSymbol, proteinPosition, curatedResidue, grch37Transcript, grch38Transcript);
        // TODO: test validations
    }
    
}
