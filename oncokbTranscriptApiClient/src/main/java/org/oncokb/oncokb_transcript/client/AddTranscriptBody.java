/*
 * oncokb-transcript API
 * oncokb-transcript API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.oncokb.oncokb_transcript.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * AddTranscriptBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AddTranscriptBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CANONICAL = "canonical";
  @SerializedName(SERIALIZED_NAME_CANONICAL)
  private Boolean canonical;

  public static final String SERIALIZED_NAME_ENSEMBL_TRANSCRIPT_ID = "ensemblTranscriptId";
  @SerializedName(SERIALIZED_NAME_ENSEMBL_TRANSCRIPT_ID)
  private String ensemblTranscriptId;

  public static final String SERIALIZED_NAME_ENTREZ_GENE_ID = "entrezGeneId";
  @SerializedName(SERIALIZED_NAME_ENTREZ_GENE_ID)
  private Integer entrezGeneId;

  public static final String SERIALIZED_NAME_REFERENCE_GENOME = "referenceGenome";
  @SerializedName(SERIALIZED_NAME_REFERENCE_GENOME)
  private String referenceGenome;

  public AddTranscriptBody() { 
  }

  public AddTranscriptBody canonical(Boolean canonical) {
    
    this.canonical = canonical;
    return this;
  }

   /**
   * Get canonical
   * @return canonical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanonical() {
    return canonical;
  }


  public void setCanonical(Boolean canonical) {
    this.canonical = canonical;
  }


  public AddTranscriptBody ensemblTranscriptId(String ensemblTranscriptId) {
    
    this.ensemblTranscriptId = ensemblTranscriptId;
    return this;
  }

   /**
   * Get ensemblTranscriptId
   * @return ensemblTranscriptId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getEnsemblTranscriptId() {
    return ensemblTranscriptId;
  }


  public void setEnsemblTranscriptId(String ensemblTranscriptId) {
    this.ensemblTranscriptId = ensemblTranscriptId;
  }


  public AddTranscriptBody entrezGeneId(Integer entrezGeneId) {
    
    this.entrezGeneId = entrezGeneId;
    return this;
  }

   /**
   * Get entrezGeneId
   * @return entrezGeneId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getEntrezGeneId() {
    return entrezGeneId;
  }


  public void setEntrezGeneId(Integer entrezGeneId) {
    this.entrezGeneId = entrezGeneId;
  }


  public AddTranscriptBody referenceGenome(String referenceGenome) {
    
    this.referenceGenome = referenceGenome;
    return this;
  }

   /**
   * Get referenceGenome
   * @return referenceGenome
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReferenceGenome() {
    return referenceGenome;
  }


  public void setReferenceGenome(String referenceGenome) {
    this.referenceGenome = referenceGenome;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddTranscriptBody addTranscriptBody = (AddTranscriptBody) o;
    return Objects.equals(this.canonical, addTranscriptBody.canonical) &&
        Objects.equals(this.ensemblTranscriptId, addTranscriptBody.ensemblTranscriptId) &&
        Objects.equals(this.entrezGeneId, addTranscriptBody.entrezGeneId) &&
        Objects.equals(this.referenceGenome, addTranscriptBody.referenceGenome);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canonical, ensemblTranscriptId, entrezGeneId, referenceGenome);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddTranscriptBody {\n");
    sb.append("    canonical: ").append(toIndentedString(canonical)).append("\n");
    sb.append("    ensemblTranscriptId: ").append(toIndentedString(ensemblTranscriptId)).append("\n");
    sb.append("    entrezGeneId: ").append(toIndentedString(entrezGeneId)).append("\n");
    sb.append("    referenceGenome: ").append(toIndentedString(referenceGenome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

